# Versione 1.0.0 del 01/06/2025
name: Test Java JSP CI/CD

on:
  push:
    branches: [ develop ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      #**********************************************
      # Checkout del codice
      #**********************************************

      - uses: actions/checkout@v4

      #**********************************************
      # Imposta la JDK per l'app
      #**********************************************
      - name: Configura JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      #**********************************************
      # Cache delle dipendenze Maven
      #**********************************************
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      #**********************************************
      # Test Applicazione
      #**********************************************
      - name: Build e Test con Maven
        run: mvn clean test

      #**********************************************
      # Preparazione/Package App
      #**********************************************
      - name: Build App
        run: mvn clean package

  docker-build-push:
    runs-on: ubuntu-latest
    steps:

      #**********************************************
      # Check secrets Docker (da rimuovere)
      #**********************************************
      # Build diretto su Docker Hub senza passare da DOCKER_HUB che richiede i secret
      #      - name: Build e Push Docker image
      #        run: |
      #          docker build -t khamsin/date-webapp:latest .
      #          docker push khamsin/date-webapp:latest
      - name: Check Docker Hub secrets
        run: |
          echo "=== Checking Docker Hub Secrets ==="
          
          # Verifica DOCKER_HUB_USERNAME
          if [ -n "$DOCKER_HUB_USERNAME" ]; then
            echo "✅ DOCKER_HUB_USERNAME is set"
            echo "Username length: ${#DOCKER_HUB_USERNAME} characters"
            echo "Username starts with: ${DOCKER_HUB_USERNAME:0:3}..."
          else
            echo "❌ DOCKER_HUB_USERNAME is NOT set"
          fi
          
          # Se hai un token invece di password
          if [ -n "$DOCKER_HUB_TOKEN" ]; then
            echo "✅ DOCKER_HUB_TOKEN is set"
            echo "Token length: ${#DOCKER_HUB_TOKEN} characters"
            echo "Token starts with: ${DOCKER_HUB_TOKEN:0:3}..."
          else
            echo "❌ DOCKER_HUB_TOKEN is NOT set"
          fi
          
          echo "=== Debug complete ==="
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

      #**********************************************
      # Test Docker conn
      #**********************************************
      - name: Test Docker Hub connection (without actual login)
        run: |
          echo "=== Testing Docker Hub connectivity ==="
          
          # Test se Docker Hub è raggiungibile
          if curl -s https://hub.docker.com > /dev/null; then
            echo "✅ Docker Hub is reachable"
          else
            echo "❌ Cannot reach Docker Hub"
          fi
          
          # Verifica il formato username (se esiste)
          if [ -n "$DOCKER_HUB_USERNAME" ]; then
            if [[ "$DOCKER_HUB_USERNAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
              echo "✅ Username format looks valid"
            else
              echo "⚠️ Username contains unusual characters"
            fi
          fi
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

      #**********************************************
      # Login Docker
      #**********************************************
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      #**********************************************
      # Setup QEMU (Emulatore per architetture
      # diverse - amd64, arm, Raspberry)
      #**********************************************
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3

      #**********************************************
      # Setup buildx
      #**********************************************
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #**********************************************
      # Build Image from Dockerfile and push
      #**********************************************
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: khamsin/date-webapp:latest

#      - name: Deploy su Docker Desktop
#        run: |
#          docker pull khamsin/date-webapp:latest
#          docker stop jsp-app || true
#          docker rm jsp-app || true
#          docker run -d -p 8080:8080 --name jsp-app khamsin/date-webapp:latest

  deploy-to-k8s:
    needs: docker-build-push
    runs-on: self-hosted  # Runner locale per accesso a Kubernetes

    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/date-webapp \
            date-webapp=${{ secrets.DOCKER_HUB_USERNAME }}/date-webapp:${{ github.sha }} \
            --namespace=test-webapp
          kubectl rollout status deployment/date-webapp --namespace=test-webapp

