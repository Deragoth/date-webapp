name: Java JSP CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-xxxx:
    runs-on: ubuntu-latest

    container:
      # Questa immagine Docker sarà usata per tutti gli step in questo job
      # Ha già JDK 17 e Maven preinstallati
      image: maven:3.8-openjdk-17
      container-name: testMediaset

    steps:
      - uses: actions/checkout@v2

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Test with Maven
        run: mvn -B test --file pom.xml

#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Configura JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Build e Test con Maven
#        run: mvn clean package

# Build diretto su Docker Hub senza passare da DockerHub che richiede i secret
#      - name: Build e Push Docker image
#        run: |
#          docker build -t khamsin/date-webapp:latest .
#          docker push khamsin/date-webapp:latest

# Build su Docker Hub con secret da configurare se l'accesso a DockerHub è Pro
#      - name: Login su Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: \${{secrets.DOCKER_HUB_USERNAME}}
#          password: \${{secrets.DOCKER_HUB_TOKEN}}

#      - name: Costruisci e pubblica immagine Docker
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: khamsin/date-webapp:latest

#      - name: Deploy su Docker Desktop
#        run: |
#          docker pull khamsin/date-webapp:latest
#          docker stop jsp-app || true
#          docker rm jsp-app || true
#          docker run -d -p 8080:8080 --name jsp-app khamsin/date-webapp:latest